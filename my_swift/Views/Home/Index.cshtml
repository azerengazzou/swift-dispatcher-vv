@using my_swift.Models
@model List<SwiftCategory>

@{
    Layout = "_Layout";
    ViewData["Title"] = "Home page";
}

<div class="text-center mb-5">
    <h1 class="display-5">SWIFT MT Message Types</h1>
    <h2 class="display-2">Categories & Common Messages</h2>
</div>

<main class="container">
    <div class="row">
        <!-- Left Column -->
        <div class="col-md-4">
            @foreach (var category in Model)
            {
                @Html.Partial("_CategoryAccordion", category)
            }
        </div>

        <!-- Right Column -->
        <div class="col-md-8">
            <form id="uploadForm">
                <label for="txtFileInput">Upload TXT File</label>
                <input class="form-control" type="file" id="txtFileInput" accept=".txt">

                <!-- Raw content preview -->
                <textarea class="form-control mb-3" id="txtFileContent" rows="10" readonly></textarea>

                <!-- Dynamic parsed fields -->
                <div id="parsedFields" class="mt-3"></div>

                <button type="button" class="btn btn-primary mt-3" id="submitBtn" disabled>Send via AJAX</button>
            </form>
        </div>
    </div>
</main>

@section Scripts {
    <script>
        const fileInput   = document.getElementById('txtFileInput');
        const textarea = document.getElementById('txtFileContent');
        const submitBtn = document.getElementById('submitBtn');
        const parsedDiv = document.getElementById('parsedFields');

        let uploadObj = null;

        fileInput.addEventListener('change', e => {
            const file = e.target.files[0];
            if (file && file.type === "text/plain") {
                const reader = new FileReader();
                reader.onload = evt => {
                    uploadObj = {
                        fileName: file.name,
                        size: file.size,
                        content: evt.target.result
                    };
                    textarea.value = uploadObj.content;
                    submitBtn.disabled = false;
                };
                reader.readAsText(file);
            } else {
                textarea.value = "";
                uploadObj = null;
                submitBtn.disabled = true;
                alert("Please select a valid .txt file.");
            }
        });

        submitBtn.addEventListener('click', async () => {
            if (!uploadObj) return alert("Choose a file first.");

            const res = await fetch('/Home/ParseTxtFile', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(uploadObj)
            });

            if (!res.ok) return alert(await res.text());

            const data = await res.json(); // 👈 List<ParsedField>

            // Clear old fields
            parsedDiv.innerHTML = "";

            // Render inputs
            data.forEach(field => {
                const group = document.createElement("div");
                group.className = "mb-3";

                const label = document.createElement("label");
                label.className = "form-label fw-bold";
                label.textContent = `${field.tag} – ${field.description}`;

                const input = document.createElement("input");
                input.type = "text";
                input.className = "form-control";
                input.value = field.value;

                group.appendChild(label);
                group.appendChild(input);
                parsedDiv.appendChild(group);
            });
        });

    </script>
}